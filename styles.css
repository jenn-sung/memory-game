
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  height: 100vh;
  display: flex;
  background: #060AB2;
}
/*display flex to body and margin auto makes .memory-game container centered vertically and horizontally

with .memory-game as a flex-container, items witll shrink in width to fit the container. Also, by setting flex-wrap to wrap, flex items wrap along multiple lines according to their size*/

/*to produce 3d flip effect, perspective property was added to .memory-game. the property sets how far in the z plane the object is from the user. the lower the value, the bigger the perspective effect. For a subtle effect, let's apply 1000px*/

.memory-game {
  width: 640px;
  height: 640px;
  margin: auto;
  display: flex;
  flex-wrap: wrap;
  perspective: 1000px;
}

/*Each card's width and height is calculated with calc function and
.memory-card children's position are relative so the children can be positioned absolutely relative to it.

Also, front face and back face position is set to absolute to stack them on top of each other*/

/*Transition has been added to transform to create the card movement*/
.memory-card {
  width: calc(25% - 10px);
  height: calc(33.333% - 10px);
  margin: 5px;
  position: relative;
  box-shadow: 1px 1px 1px rgba(0,0,0,.3);
  transform: scale(1);
  transform-style: preserve-3d;
  transition: transform .5s;
}

.memory-card:active {
  transform: scale(0.97);
  transition: transform .2s;
}

.memory-card.flip {
  transform: rotateY(180deg);
}

/*backface visibility hidden was added to reveal that specific card's image*/
.front-face, 
.back-face {
  width: 100%;
  height: 100%;
  padding: 20px;
  position: absolute;
  border-radius: 5px;
  background: #1C7CCC;
  backface-visibility: hidden;
}

/*adding 180 deg rotation to front face because both images were hidden backface*/
.front-face {
  transform: rotateY(180deg);
}